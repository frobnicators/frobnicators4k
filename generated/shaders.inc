#pragma data_seg(".shaders")
static const char * _shaders[] = {
	{ "#version 150\n#extension GL_ARB_explicit_attrib_location:enable\nuniform float t,s;\nstruct Ray{\nvec3 po;\nvec3 d;\n\n}\n;\n\nvec4 scene(vec3 p);\nvec3 slight(Ray r, vec4 c);\nvec3 bg(Ray r, vec4 c);\nfloat dbox(vec3 v,vec3 f,vec3 w){\nvec3 d=abs(f-v)-w;\nreturn max(d.x,max(d.y,d.z));\n\n}\nvec3 rotateY(vec3 v,float f){\nfloat r,w;\nr=sin(f);\nw=cos(f);\nreturn vec3(v.x*w+v.z*r,v.y,v.z*w-v.x*r);\n\n}\nvec3 permute(vec3 v){\nreturn mod((v*34.+1.)*v,289);\n\n}\nfloat snoise(vec2 v){\nconst vec4 d=vec4(.211,.366,-.577,.024);\nvec2 f=floor(v+dot(v,d.yy)),w=v-f+dot(f,d.xx),r;\nr=w.x>w.y?vec2(1.,0.):vec2(0.,1.);\nvec4 i=w.xyxy+d.xxzz;\ni.xy-=r;\nvec3 z=permute(permute(f.y+vec3(0.,r.y,1.))+f.x+vec3(0.,r.x,1.)),x=max(.5-vec3(dot(w,w),dot(i.xy,i.xy),dot(i.zw,i.zw)),0.);\nx=pow(x,vec3(4));\nvec3 p=2.*fract(z*d.www)-1.,o=abs(p)-.5,y=floor(p+.5),m=p-y;\nx*=1.79-.85*(m*m+o*o);\nvec3 e;\ne.x=m.x*w.x+o.x*w.y;\ne.yz=m.yz*i.xz+o.yz*i.yw;\nreturn 130.*dot(x,e);\n\n}\nfloat fbm(in vec2 v,int w){\nfloat r=0.;\nfor(float f=0;\nf<w;\nf++)r+=pow(.3,f)*snoise(pow(2.,f)*v);\nreturn r;\n\n}\nvec4 cast_ray(inout Ray v,float w){\nvec3 f=v.po;\nfloat r=0;\nfor(int x=0;\nr<w;\nx++){\nvec4 d=scene(v.po);\nif(d.w<.001)return v.po+=v.d*clamp(d.w,-10.,0),d;\nd.w=max(.001*r,d.w);\nv.po+=v.d*d.w;\nr=length(f-v.po);\n\n}\nreturn vec4(-1);\n\n}\nvec3 n_at(vec3 v){\nvec3 f;\nf.x=scene(v+vec3(.001,0,0)).w-scene(v-vec3(.001,0,0)).w;\nf.y=scene(v+vec3(0,.001,0)).w-scene(v-vec3(0,.001,0)).w;\nf.z=scene(v+vec3(0,0,.001)).w-scene(v-vec3(0,0,.001)).w;\nreturn normalize(f);\n\n}\nfloat shadow(vec3 v,vec3 f,float w){\nv-=f*.5;\nfloat r=1.,x=0;\nfor(int d=0;\nd<50&&x<w;\nd++){\nvec4 i=scene(v);\nif(i.w<.001)return 0.;\nfloat m=max(.001*x*2,i.w);\nx+=m;\nr=min(r,60.*i.w/x);\nv-=f*m;\n\n}\nreturn r;\n\n}\nvec3 light(Ray v,vec4 f,vec3 w){\nvec3 r=v.po-w;\nfloat d=length(r);\nr=normalize(r);\nvec3 x=n_at(v.po);\nfloat z=max(dot(-r,x),0.)*shadow(v.po,r,d);\nvec3 m=f.xyz*z*vec3(.8);\nreturn m+f.xyz*vec3(.2);\n\n}\nvec3 raymarch(Ray v){\nvec4 f=cast_ray(v,100.f);\nif(f.x>-.5)return slight(v,f);\nelse return bg(v,f);\n\n}\n" },
	{ "in vec2 p;\nin vec3 c;\nout vec3 oc;\nvoid main(){\noc=raymarch(vec3(0,0,t*10),p)*mix(vec3(1.),vec3(.4392,.2588,.0784),length(p)/length(vec2(1)));\n\n}\nfloat distance_sphere(vec3 v,vec3 l,float o){\nreturn length(v-l)-o;\n\n}\nfloat scene(vec3 v,out vec3 l){\nreturn l=vec3(.7,0,.7),dbox(mod(v,vec3(20)),vec3(10),vec3(6));\n\n}\nvec3 lpos(){\nreturn vec3(sin(t*2.)*10.,0,t+2.)*10.;\n\n}\n" },
	{ "in vec2 p;\nin vec3 ro,rd;\nout vec3 oc;\nvoid main(){\nRay v;\nv.po=vec3(0,0,-10);\nv.d=vec3(0);\nv.d+=vec3(1,0,0)*p.x;\nv.d+=vec3(0,1,0)*p.y*.56;\nv.d+=vec3(0,0,1);\nv.d=normalize(v.d);\noc=raymarch(v);\n\n}\nfloat pillar(vec3 v){\nreturn min(dbox(v,vec3(0.),vec3(1,5,1))+.2*clamp(fbm(v.xz*2.,1),0,1),dbox(v,vec3(0,4,0),vec3(1.5,.1,1.5))+.2*clamp(fbm(v.xz*2.,1),0,1));\n\n}\nvec4 scene(vec3 v){\nfloat d=v.y+3.;\nvec4 o=vec4(.5);\nfloat r=pillar(rotateY(v,v.y*.5));\nif(r<d)o.xyz=vec3(.8235,.7059,.549)+fbm(v.xy,1)*.2;\no.w=min(d,r);\nreturn o;\n\n}\nvec3 slight(Ray v,vec4 r){\nreturn light(v,r,vec3(sin(t*.5)*10.,1,1-cos(t*.5))*10.);\n\n}\nvec3 bg(Ray v,vec4 r){\nreturn vec3(.1,.1,.8);\n\n}\n" },
	{ "in vec2 p;\nin vec3 c;\nout vec3 oc;\nvoid main(){\noc=raymarch(vec3(0,0,-10),p)*mix(vec3(1.),vec3(.4392,.2588,.0784),smoothstep(length(p),0,1));\n\n}\nfloat pillar(vec3 v){\nreturn min(dbox(v,vec3(0.),vec3(1,5,1))+.2*clamp(fbm(v*2.),0,1),dbox(v,vec3(0,4,0),vec3(1.5,.1,1.5))+.2*clamp(fbm(v*2.),0,1));\n\n}\nfloat scene(vec3 v,out vec3 m){\nfloat l=v.y+3.;\nm=vec3(.5);\nfloat o=pillar(rotateY(v,v.y*.5));\nif(o<l)m=vec3(.8235,.7059,.549)+fbm(v*5.)*.2;\nreturn min(l,o);\n\n}\nvec3 lpos(){\nreturn vec3(-10);\n\n}\n" },
	{ "layout(location=0)in vec2 ip;\nout vec2 p;\nout vec3 ro,rd;\nvoid cam(out vec3 v[4]){\nv=vec3[4](vec3(0),vec3(1,0,0),vec3(0,1,0),vec3(0,0,1));\n\n}\nvoid main(){\np=ip;\ngl_Position=vec4(ip,0.,1.);\nvec3 v=gl_Position.xyz*vec3(1.7777,1.,0)+vec3(0,0,-1),d[4];\ncam(d);\nro=d[0];\nrd.x=dot(v,d[1]);\nrd.y=dot(v,d[2]);\nrd.z=dot(v,d[3]);\n\n}\n" },
};
